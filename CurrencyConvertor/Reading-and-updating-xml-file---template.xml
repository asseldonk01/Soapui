<?xml version="1.0" encoding="UTF-8"?>
<con:testCase id="b37a4f6f-c508-45ec-a61d-10544a86e6aa" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Reading and updating xml file - template" searchProperties="true" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="b37a4f6f-c508-45ec-a61d-10544a86e6aafileName">Reading-and-updating-xml-file---template</con:setting></con:settings><con:testStep type="properties" name="Properties" id="679fe6c9-571b-47a0-89ed-893f9ae03e18"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>zaaknummer</con:name><con:value>12</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="2b889459-7b62-4ebc-8118-18aa8b697abf"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

String fileContents = new File(projectDir+'/'+'DocumentNodes.xml').getText('UTF-8')

testRunner.testCase.setPropertyValue( "FileContents", fileContents )

def holderXML = groovyUtils.getXmlHolder(fileContents)

def zaaknummer = context.expand( '${Properties#zaaknummer}' )
def binding = [zaaknummer:"${zaaknummer}"]

def engine = new groovy.text.XmlTemplateEngine()

def template = engine.createTemplate(holderXML.xml).make(binding)
log.info template.toString()

// change using XPath
//holderXML["//srk:Zaakidentificatiecode"] = zaaknummer

//holderXML.updateProperty()

//log.info holderXML.xml

//file = new File(projectDir+'/'+'DocumentNodes_new.xml')
//file.createNewFile()
//file.write(holderXML.xml)


 



</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Groovy Script" id="44214874-16bd-46e0-8c03-53ae43411230" disabled="true"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

log.info projectDir

//def xmlread = groovyUtils.getXml(new XmlParser().parse(new File(projectDir+'/'+'test.xml')))
//def holder = groovyUtils.getXml(new XmlParser().parse(new File(projectDir+'/'+'test.xml')))
//def xmlread = new XmlSlurper().parse(new File(projectDir+'/'+'test.xml')).text()
//def xmlread = new XmlSlurper().parse(new File(projectDir+'/'+'test.xml'))

//def pers=new XmlSlurper().parse(new File(projectDir+"/"+"test.xml" ))
//log.info pers.toString()

//def xmlread = new XmlParser().parse(new File(projectDir+'/'+'test.xml'))).text(

//testRunner.testCase.setPropertyValue( "XMLread", pers )


root = new XmlParser().parse(new File(projectDir+'/'+'test.xml'))
def result = (new StreamingMarkupBuilder()).bindNode(root).toString()

</script></con:config></con:testStep><con:properties><con:property><con:name>XMLread</con:name><con:value>Dit is een document</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>d711d7ff-8c7d-44b9-bf1b-ee04e542015d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase>